#include "fuzzers.h"

#include <nil/crypto3/pubkey/pk_keys.hpp>
#include <nil/crypto3/pkcs8.h>
#include <nil/crypto3/pubkey/ec_group/ec_group.hpp>

void fuzz(const uint8_t in[], size_t len) {
    try {
        nil::crypto3::DataSource_Memory input(in, len);
        nil::crypto3::Null_RNG null_rng;
        std::unique_ptr<nil::crypto3::private_key> key(nil::crypto3::PKCS8::load_key(input, null_rng));
    } catch (nil::crypto3::Exception &e) {
    }

    /*
     * This avoids OOMs in OSS-Fuzz caused by storing precomputations
     * for thousands of curves randomly generated by the fuzzer.
     */
    nil::crypto3::ec_group::clear_registered_curve_data();
}
